{"version":3,"sources":["context/userContext.js","Components/Nav/Nav.js","Components/LandingPage/Landing.js","Components/Contact/Contact.js","Components/Auth/Signup.js","Components/Auth/Login.js","Components/Inventory/Controls.js","Components/Inventory/Calibrators.js","Components/Inventory/Reagents.js","Components/Inventory/Consumables.js","Components/Inventory/InventoryHome.js","App.js","index.js"],"names":["createContext","Header","useContext","UserContext","userData","setUserData","Navbar","sticky","bg","expand","Container","fluid","Brand","className","to","Toggle","aria-controls","Offcanvas","id","aria-labelledby","placement","closeButton","Title","Body","Nav","token","onClick","console","log","fetch","method","headers","Authorization","then","data","email","undefined","Landing","class","src","alt","GoogleSpreadsheet","require","creds","doc","Contact","useState","name","setName","setEmail","message","setMessage","buttonText","setButtonText","displayForm","setDisplayForm","makeInitialCall","a","useServiceAccountAuth","loadInfo","sheetsByIndex","getRows","dataRows","useEffect","handleSubmit","event","preventDefault","newRow","Name","Email","Message","addRow","type","onChange","e","target","value","placeholder","SignUp","navigate","useNavigate","password","setPassword","axios","post","user","newUser","loginResponse","localStorage","setItem","error","Form","onSubmit","Group","controlId","Label","Control","Button","variant","Login","Controls","controls","setControls","setId","description","setDescription","storageTemp","setStorageTemp","refNum","setRefNum","partNum","setPartNum","uom","setUom","quantity","setQuantity","lotNum","setLotNum","expiration","setExpiration","comments","setComments","isFlipped","setIsFlipped","handleClick","isAdding","setIsAdding","isControls","setIsControls","getControls","getItem","res","json","controlTable","map","control","storage_temp","reference_num","part_number","unit_of_measure","lot_number","expiration_date","editCal","deleteCal","body","JSON","stringify","length","fliDirection","Table","responsive","striped","bordered","hover","size","style","display","Calibrators","calibrators","setCalibrators","isCalibrators","setIsCalibrators","getCalibrators","calibratorTable","calibrator","Reagents","reagents","setReagents","isReagents","setIsReagents","getReagents","reagentTable","reagent","Consumables","consumables","setConsumables","isConsumables","setIsConsumables","getConsumables","consumableTable","consumable","InventoryHome","App","Provider","exact","path","element","Signup","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1c9c788.chunk.js","sourcesContent":["import { createContext } from \"react\";\nexport default createContext(null);\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Container, Offcanvas, Nav } from \"react-bootstrap\";\nimport UserContext from \"../../context/userContext\";\nimport './nav.css'\n\n\nconst Header = () => {\n\n  const { userData, setUserData } = useContext(UserContext);\n\n  const logout = () => {\n    console.log('loggingout')\n    fetch(\"https://labinventory-api.herokuapp.com/sign-out/\", {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Token ${userData.token}`,\n      },\n    }).then((data) => {\n      setUserData({\n        email: undefined,\n        token: undefined,\n      });\n    });\n  }\n\n  return (\n    <>\n      <Navbar sticky=\"top\" bg=\"light\" expand={false}>\n        <Container fluid>\n          <Navbar.Brand>\n            <Link className=\"nav-links-main\" to=\"/\">\n              <span className=\"lablist\">LabList</span>\n            </Link>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"offcanvasNavbar\" />\n          <Navbar.Offcanvas\n            id=\"offcanvasNavbar\"\n            aria-labelledby=\"offcanvasNavbarLabel\"\n            placement=\"end\"\n          >\n            <Offcanvas.Header closeButton>\n              <Offcanvas.Title id=\"offcanvasNavbarLabel\">\n                <Link className=\"nav-links-main\" to=\"/\">\n                  <span className=\"lablist\">LabList</span>\n                </Link>\n              </Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n              <Nav className=\"justify-content-end flex-grow-1 pe-3\">\n                {/* <Link className=\"nav-links\" to=\"/sign-up\">\n                    SignUp\n                  </Link> */}\n                <Link className=\"nav-links\" to=\"/login\">\n                  {userData.token ? (\n                    <span onClick={logout}>Logout</span>\n                  ) : (\n                    \"Login\"\n                  )}\n                </Link>\n                <Link className=\"nav-links\" to=\"/inventory\">\n                  Inventory\n                </Link>\n                <Link className=\"nav-links\" to=\"/contact\">\n                  Contact\n                </Link>\n              </Nav>\n            </Offcanvas.Body>\n          </Navbar.Offcanvas>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react'\nimport './landing.css'\n\nconst Landing = () => {\n    return (\n      <div id=\"landing\">\n        <div class=\"container\">\n          <img\n            className='labphoto'\n            src=\"https://res.cloudinary.com/adelaney923/image/upload/v1640113474/labphoto1_l17oef.jpg\"\n            alt=\"labphoto\"\n          />\n          <div className=\"text-block\">\n              <div className='text'>\n            <h1>\n              <span className=\"lablist\">LabList</span>\n            </h1>\n            <p>Your place to keep track of all your lab inventory.</p>\n            </div>\n          </div>\n          </div>\n      </div>\n    );\n}\n\nexport default Landing","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport './contact.css'\n\nconst { GoogleSpreadsheet } = require(\"google-spreadsheet\");\nconst creds = require(\"../../client_secret.json\");\nlet doc = {};\n\nconst Contact = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [buttonText, setButtonText] = useState(\"Send\");\n  const [displayForm, setDisplayForm] = useState(true)\n\n  const makeInitialCall = async () => {\n    doc = new GoogleSpreadsheet(\"1CFw9i7jG-egHhLlZTzNERF7UIVaKzfl5sSt5rj0C0O8\");\n    await doc.useServiceAccountAuth(creds);\n    await doc.loadInfo();\n    let dataRows = await doc.sheetsByIndex[0].getRows();\n    console.log(doc.sheetsByIndex[0]);\n    console.log(dataRows);\n  };\n  useEffect(() => {\n    makeInitialCall();\n  }, []);\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setButtonText(\"Thanks!\");\n    setDisplayForm(!displayForm)\n    let newRow = {\n      Name: name,\n      Email: email,\n      Message: message,\n    };\n\n    let sheet = await doc.sheetsByIndex[0];\n    sheet.addRow(newRow);\n    setName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n  };\n\n  return (\n    <div className=\"contact-form\">\n      <div className=\"container\">\n        <img\n          className=\"labphoto\"\n          src=\"https://res.cloudinary.com/adelaney923/image/upload/v1640113474/labphoto1_l17oef.jpg\"\n          alt=\"labphoto\"\n        />\n        <div className=\"formblock\">\n          {displayForm ? (\n            <form>\n              <h3>Let's Talk</h3>\n              <input\n                type=\"text\"\n                onChange={handleNameChange}\n                value={name}\n                placeholder=\"Name\"\n              />\n              <input\n                type=\"email\"\n                onChange={handleEmailChange}\n                value={email}\n                placeholder=\"Email\"\n              />\n              <textarea\n                type=\"text\"\n                onChange={handleMessageChange}\n                value={message}\n                placeholder=\"What's on your mind?\"\n              />\n              <button onClick={handleSubmit}>{buttonText}</button>\n            </form>\n          ) : (\n            <p className=\"submitText\">\n              <span className=\"thanks\">Thank you.</span><br/>We will be in contact\n              soon.\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import { Form, Button } from \"react-bootstrap\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nimport React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../context/userContext\";\nimport './auth.css'\n\nfunction SignUp() {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const { setUserData } = useContext(UserContext);\n  let signupUrl = \"https://labinventory-api.herokuapp.com/sign-up/\";\n  let loginUrl = \"https://labinventory-api.herokuapp.com/sign-in/\";\n  //   const [error, setError] = useState();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const newUser = await axios.post(signupUrl, {\n        user: {\n          email: email,\n          password: password,\n        },\n      });\n      const loginResponse = await axios.post(loginUrl, {\n        user: {\n          email: email,\n          password: password,\n        },\n      });\n      setUserData({\n        email: loginResponse.data.email,\n        token: loginResponse.data.token,\n      });\n      localStorage.setItem(\"auth-token\", loginResponse.data.token);\n      navigate(\"/inventory\");\n      console.log(newUser.data);\n      console.log(loginResponse.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <div id=\"signup\">\n        <div className=\"container\">\n          <img\n            className=\"labphoto\"\n            src=\"https://res.cloudinary.com/adelaney923/image/upload/v1640113474/labphoto1_l17oef.jpg\"\n            alt=\"labphoto\"\n          />\n          <div id=\"signupForm\">\n            <div className=\"formcontent\">\n              <Form className=\"signupform\" onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                  <Form.Label>\n                    <h5>Email Address</h5>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                  <Form.Label>\n                    <h5>Password</h5>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </Form.Group>\n                <Button className=\"signuplink\" variant=\"primary\" type=\"submit\">\n                  Create Account\n                </Button>\n              </Form>\n\n              <h5>Already have an account?</h5>\n              <Button className=\"loginLink\" variant=\"primary\" type=\"submit\">\n                <Link className=\"login-link\" to=\"/login\">\n                  Login\n                </Link>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SignUp;\n","import { Form, Button } from \"react-bootstrap\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../context/userContext\";\nimport './auth.css'\n\nfunction Login() {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const { userData, setUserData } = useContext(UserContext);\n  let loginUrl = \"https://labinventory-api.herokuapp.com/sign-in/\";\n  //   const [error, setError] = useState();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const loginResponse = await axios.post(loginUrl, {\n        user: {\n          email: email,\n          password: password,\n        },\n      });\n      console.log(loginResponse.data.user.token);\n      setUserData({\n        email: loginResponse.data.user.email,\n        token: loginResponse.data.user.token,\n      });\n      localStorage.setItem(\"auth-token\", loginResponse.data.user.token);\n      navigate(\"/inventory\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div id=\"login\">\n      <div className=\"container\">\n        <img\n          className=\"labphoto\"\n          src=\"https://res.cloudinary.com/adelaney923/image/upload/v1640113474/labphoto1_l17oef.jpg\"\n          alt=\"labphoto\"\n        />\n        <div id=\"loginForm\">\n          <div className=\"formcontent\">\n            <Form className=\"loginform\" onSubmit={handleSubmit}>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>\n                  <h5>Email Address</h5>\n                </Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>\n                  <h5>Password</h5>\n                </Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Form.Group>\n              <Button className=\"loginLink\" variant=\"primary\" type=\"submit\">\n                Login\n              </Button>\n            </Form>\n\n            <h5>New to LabList?</h5>\n            <Button className=\"signuplink\" variant=\"primary\" type=\"submit\">\n              <Link className=\"signup-link\" to=\"/sign-up\">\n                Sign Up\n              </Link>\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport UserContext from \"../../context/userContext\";\nimport ReactCardFlip from \"react-card-flip\";\nimport \"./inventory.css\";\n\nfunction Controls() {\n  const { userData } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [redirect, setRedirect] = useState(false);\n  const [controls, setControls] = useState([]);\n\n  //   setting states for new calibrator form\n  const [id, setId] = useState();\n  const [description, setDescription] = useState();\n  const [storageTemp, setStorageTemp] = useState();\n  const [refNum, setRefNum] = useState();\n  const [partNum, setPartNum] = useState();\n  const [uom, setUom] = useState();\n  const [quantity, setQuantity] = useState();\n  const [lotNum, setLotNum] = useState();\n  const [expiration, setExpiration] = useState();\n  const [comments, setComments] = useState(\"\");\n\n  //   variables and function for card flip\n  const [isFlipped, setIsFlipped] = useState(false);\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  //   variables and function for displaying add calibrator\n  const [isAdding, setIsAdding] = useState(false);\n  const showAdd = () => {\n    setIsAdding(!isAdding);\n  };\n\n  // variable to choose what is shown in calibrators table\n  const [isControls, setIsControls] = useState(false);\n\n  const getControls = () => {\n    if (localStorage.getItem(\"auth-token\") !== null) {\n      fetch(\"https://labinventory-api.herokuapp.com/controls/\", {\n        headers: {\n          Authorization: `Token ${userData.token}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setControls(data);\n          setIsControls(!isControls);\n        });\n    }\n  };\n\n  useEffect(() => {\n    getControls();\n  }, []);\n\n  //   method to update one of the controls\n  const editCal = (control) => {\n    console.log(\"edited\");\n    setId(control.id);\n    setDescription(control.description);\n    setStorageTemp(control.storage_temp);\n    setRefNum(control.reference_num);\n    setPartNum(control.part_number);\n    setUom(control.unit_of_measure);\n    setQuantity(control.quantity);\n    setLotNum(control.lot_number);\n    setExpiration(control.expiration_date);\n    setComments(control.comments);\n  };\n\n  //   method to delete calibrator\n  const deleteCal = (id) => {\n    console.log(\"deleted\");\n    fetch(\"https://labinventory-api.herokuapp.com/controls/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Token ${userData.token}`,\n      },\n    }).then((data) => getControls());\n  };\n\n  //   map over calibrator data to get data for the table\n  const controlTable =\n    controls &&\n    controls.map((control) => {\n      return (\n        <tr>\n          <td>{control.id}</td>\n          <td>{control.description}</td>\n          <td>{control.storage_temp}</td>\n          <td>{control.reference_num}</td>\n          <td>{control.part_number}</td>\n          <td>{control.unit_of_measure}</td>\n          <td>{control.quantity}</td>\n          <td>{control.lot_number}</td>\n          <td>{control.expiration_date}</td>\n          <td>{control.comments}</td>\n          <td className=\"editicons\">\n            <i\n              class=\"far fa-edit\"\n              onClick={() => {\n                editCal(control);\n                handleClick();\n              }}\n            ></i>\n            <i\n              class=\"far fa-trash-alt\"\n              onClick={() => deleteCal(control.id)}\n            ></i>\n          </td>\n        </tr>\n      );\n    });\n\n  //   handle submit for form to add new calibrator\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"submitted\");\n    if (localStorage.getItem(\"auth-token\") !== null) {\n      fetch(\"https://labinventory-api.herokuapp.com/controls/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${userData.token}`,\n        },\n        body: JSON.stringify({\n          description: description,\n          storage_temp: storageTemp,\n          reference_num: refNum,\n          part_number: partNum,\n          unit_of_measure: uom,\n          quantity: quantity,\n          lot_number: lotNum,\n          expiration_date: expiration,\n          comments: comments,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          getControls();\n        });\n    }\n  };\n\n  const patchRequest = (e) => {\n    e.preventDefault();\n    console.log(\"patch\");\n    console.log(id);\n    if (localStorage.getItem(\"auth-token\") !== null) {\n      fetch(\"https://labinventory-api.herokuapp.com/controls/\" + id, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${userData.token}`,\n        },\n        body: JSON.stringify({\n          description: description,\n          storage_temp: storageTemp,\n          reference_num: refNum,\n          part_number: partNum,\n          unit_of_measure: uom,\n          quantity: quantity,\n          lot_number: lotNum,\n          expiration_date: expiration,\n          comments: comments,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          getControls();\n        });\n    }\n    //   getCalibrators();\n  };\n\n  console.log(controls.length);\n\n  return (\n    <div id=\"controls\">\n      <h3 className=\"invTitle\">Controls</h3>\n      {controls.length !== 0 ? (\n        <ReactCardFlip\n          className=\"flipCard\"\n          isFlipped={isFlipped}\n          fliDirection=\"vertical\"\n        >\n          <div className=\"frontCard\">\n            <div className=\"controlTable\">\n              <Table responsive striped bordered hover size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Description</th>\n                    <th>Storage</th>\n                    <th>REF</th>\n                    <th>P/N</th>\n                    <th>UOM</th>\n                    <th>QTY</th>\n                    <th>Lot</th>\n                    <th>Expiration</th>\n                    <th>Comments</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>{controlTable}</tbody>\n              </Table>\n            </div>\n          </div>\n\n          {/* back of card for updating control */}\n          <div className=\"backCard\">\n            <div className=\"newControl\">\n              <h3>Update Control</h3>\n              <form onSubmit={patchRequest}>\n                <Table responsive striped bordered hover size=\"sm\">\n                  <thead>\n                    <tr>\n                      <th>Description</th>\n                      <th>Storage</th>\n                      <th>REF</th>\n                      <th>P/N</th>\n                      <th>UOM</th>\n                      <th>QTY</th>\n                      <th>Lot</th>\n                      <th>Expiration</th>\n                      <th>Comments</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setDescription(e.target.value)}\n                          placeholder=\"Description\"\n                          value={description}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setStorageTemp(e.target.value)}\n                          placeholder=\"Storage Temp\"\n                          value={storageTemp}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setRefNum(e.target.value)}\n                          placeholder=\"Reference Number\"\n                          value={refNum}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setPartNum(e.target.value)}\n                          placeholder=\"Part Number\"\n                          value={partNum}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setUom(e.target.value)}\n                          placeholder=\"UOM\"\n                          value={uom}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setQuantity(e.target.value)}\n                          placeholder=\"Quantity\"\n                          value={quantity}\n                          size=\"4\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setLotNum(e.target.value)}\n                          placeholder=\"Lot\"\n                          value={lotNum}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setExpiration(e.target.value)}\n                          placeholder=\"Expiration\"\n                          value={expiration}\n                          size=\"10\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setComments(e.target.value)}\n                          placeholder=\"Comments\"\n                          value={comments}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <button className=\"invButton\" onClick={handleClick}>\n                          Update\n                        </button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </form>\n            </div>\n          </div>\n        </ReactCardFlip>\n      ) : (\n        <h4>No controls added yet.</h4>\n      )}\n\n      {/* form for adding a calibrator */}\n      <button className=\"invButton\" onClick={showAdd}>\n        Add Control\n      </button>\n      <div\n        className=\"newControl\"\n        style={{ display: isAdding ? \"block\" : \"none\" }}\n      >\n        <h3>Add Control</h3>\n        <form onSubmit={handleSubmit}>\n          <Table responsive striped bordered hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>Description</th>\n                <th>Storage</th>\n                <th>REF</th>\n                <th>P/N</th>\n                <th>UOM</th>\n                <th>QTY</th>\n                <th>Lot</th>\n                <th>Expiration Date</th>\n                <th>Comments</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Description\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setStorageTemp(e.target.value)}\n                    placeholder=\"Storage Temp\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setRefNum(e.target.value)}\n                    placeholder=\"Reference Number\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setPartNum(e.target.value)}\n                    placeholder=\"Part Number\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setUom(e.target.value)}\n                    placeholder=\"UOM\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setQuantity(e.target.value)}\n                    placeholder=\"Quantity\"\n                    size=\"4\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setLotNum(e.target.value)}\n                    placeholder=\"Lot\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setExpiration(e.target.value)}\n                    placeholder=\"Expiration\"\n                    size=\"10\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setComments(e.target.value)}\n                    placeholder=\"Comments\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <button className=\"invButton\" onClick={handleSubmit}>\n                    Add\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Controls;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {Table} from 'react-bootstrap'\nimport { Link, useNavigate } from \"react-router-dom\";\nimport UserContext from \"../../context/userContext\";\nimport ReactCardFlip from \"react-card-flip\";\nimport './inventory.css'\n\nfunction Calibrators() {\n  const { userData } = useContext(UserContext);\n  const navigate = useNavigate()\n  const [redirect, setRedirect] = useState(false);\n  const [calibrators, setCalibrators] = useState([]);\n\n//   setting states for new calibrator form\n  const [id, setId] = useState();\n  const [description, setDescription] = useState();\n  const [storageTemp, setStorageTemp] = useState();\n  const [refNum, setRefNum] = useState();\n  const [partNum, setPartNum] = useState();\n  const [uom, setUom] = useState();\n  const [quantity, setQuantity] = useState();\n  const [lotNum, setLotNum] = useState();\n  const [expiration, setExpiration] = useState();\n  const [comments, setComments] = useState(\"\");\n\n//   variables and function for card flip\n  const [isFlipped, setIsFlipped] = useState(false)\n  const handleClick = () => {\n      setIsFlipped(!isFlipped)\n  }\n\n//   variables and function for displaying add calibrator\n  const [isAdding, setIsAdding] = useState(false)\n  const showAdd = () => {\n      setIsAdding(!isAdding)\n  }\n\n// variable to choose what is shown in calibrators table\n  const [isCalibrators, setIsCalibrators] = useState(false)\n\n  const getCalibrators = () => {\n    if (localStorage.getItem(\"auth-token\") !== null) {\n      fetch(\"https://labinventory-api.herokuapp.com/calibrators/\", {\n        headers: {\n          Authorization: `Token ${userData.token}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n            setCalibrators(data)\n            setIsCalibrators(!isCalibrators)});\n    }\n  };\n\n  useEffect(() => {\n    getCalibrators();\n  }, []);\n\n//   method to update one of the calibrators\n  const editCal = (calibrator) => {\n    console.log(\"edited\");\n    setId(calibrator.id)\n    setDescription(calibrator.description);\n    setStorageTemp(calibrator.storage_temp);\n    setRefNum(calibrator.reference_num);\n    setPartNum(calibrator.part_number);\n    setUom(calibrator.unit_of_measure);\n    setQuantity(calibrator.quantity);\n    setLotNum(calibrator.lot_number);\n    setExpiration(calibrator.expiration_date);\n    setComments(calibrator.comments);\n}\n\n//   method to delete calibrator\n  const deleteCal = (id) => {\n      console.log(\"deleted\");\n      fetch(\"https://labinventory-api.herokuapp.com/calibrators/\" + id, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Token ${userData.token}`,\n        }\n      }).then((data) => getCalibrators());\n  }\n\n//   map over calibrator data to get data for the table\n  const calibratorTable = calibrators && calibrators.map((calibrator) => {\n      return (\n        <tr>\n          <td>{calibrator.id}</td>\n          <td>{calibrator.description}</td>\n          <td>{calibrator.storage_temp}</td>\n          <td>{calibrator.reference_num}</td>\n          <td>{calibrator.part_number}</td>\n          <td>{calibrator.unit_of_measure}</td>\n          <td>{calibrator.quantity}</td>\n          <td>{calibrator.lot_number}</td>\n          <td>{calibrator.expiration_date}</td>\n          <td>{calibrator.comments}</td>\n          <td className=\"editicons\">\n            <i class=\"far fa-edit\" onClick={() => {\n                editCal(calibrator)\n                handleClick()}}></i>\n            <i\n              class=\"far fa-trash-alt\"\n              onClick={() => deleteCal(calibrator.id)}></i>\n          </td>\n        </tr>\n      );\n  })\n\n//   handle submit for form to add new calibrator\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('submitted')\n        if (localStorage.getItem(\"auth-token\") !== null) {\n            fetch(\"https://labinventory-api.herokuapp.com/calibrators/\", {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Token ${userData.token}`,\n                },\n                body: JSON.stringify({\n                    description: description,\n                    storage_temp: storageTemp,\n                    reference_num: refNum,\n                    part_number: partNum,\n                    unit_of_measure: uom,\n                    quantity: quantity,\n                    lot_number: lotNum,\n                    expiration_date: expiration,\n                    comments: comments\n                }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n            console.log(data);\n            getCalibrators();\n    })\n  };\n}\n\n    const patchRequest = (e) => {\n      e.preventDefault();\n      console.log(\"patch\");\n      console.log(id);\n      if (localStorage.getItem(\"auth-token\") !== null) {\n        fetch(\"https://labinventory-api.herokuapp.com/calibrators/\" + id, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${userData.token}`,\n          },\n          body: JSON.stringify({\n            description: description,\n            storage_temp: storageTemp,\n            reference_num: refNum,\n            part_number: partNum,\n            unit_of_measure: uom,\n            quantity: quantity,\n            lot_number: lotNum,\n            expiration_date: expiration,\n            comments: comments,\n          }),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            console.log(data);\n            getCalibrators();\n          });\n      }\n      //   getCalibrators();\n    };;\n\n  return (\n    <div id=\"calibrators\">\n      <h3 className=\"invTitle\">Calibrators</h3>\n      {calibrators.length !== 0 ? (\n        <ReactCardFlip isFlipped={isFlipped} fliDirection=\"vertical\">\n          <div className=\"frontCard\">\n            <div className=\"calibratorTable\">\n              <Table responsive striped bordered hover size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Description</th>\n                    <th>Storage</th>\n                    <th>REF</th>\n                    <th>P/N</th>\n                    <th>UOM</th>\n                    <th>QTY</th>\n                    <th>Lot</th>\n                    <th>Expiration Date</th>\n                    <th>Comments</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>{calibratorTable}</tbody>\n              </Table>\n            </div>\n          </div>\n\n          <div className=\"backCard\">\n            <div className=\"newCalibrator\">\n              <h3>Update Calibrator</h3>\n              <form onSubmit={patchRequest}>\n                <Table responsive striped bordered hover size=\"sm\">\n                  <thead>\n                    <tr>\n                      <th>Description</th>\n                      <th>Storage</th>\n                      <th>REF</th>\n                      <th>P/N</th>\n                      <th>UOM</th>\n                      <th>QTY</th>\n                      <th>Lot</th>\n                      <th>Expiration Date</th>\n                      <th>Comments</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setDescription(e.target.value)}\n                          placeholder=\"Description\"\n                          value={description}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setStorageTemp(e.target.value)}\n                          placeholder=\"Storage Temp\"\n                          value={storageTemp}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setRefNum(e.target.value)}\n                          placeholder=\"Reference Number\"\n                          value={refNum}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setPartNum(e.target.value)}\n                          placeholder=\"Part Number\"\n                          value={partNum}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setUom(e.target.value)}\n                          placeholder=\"UOM\"\n                          value={uom}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setQuantity(e.target.value)}\n                          placeholder=\"Quantity\"\n                          value={quantity}\n                          size=\"4\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setLotNum(e.target.value)}\n                          placeholder=\"Lot\"\n                          value={lotNum}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setExpiration(e.target.value)}\n                          placeholder=\"Expiration\"\n                          value={expiration}\n                          size=\"10\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setComments(e.target.value)}\n                          placeholder=\"Comments\"\n                          value={comments}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <button className=\"invButton\" onClick={handleClick}>\n                          Update\n                        </button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </form>\n            </div>\n          </div>\n        </ReactCardFlip>\n      ) : (\n        <h4>No calibrators added yet.</h4>\n      )}\n\n      <button className=\"invButton\" onClick={showAdd}>\n        Add Calibrator\n      </button>\n      <div\n        className=\"newCalibrator\"\n        style={{ display: isAdding ? \"block\" : \"none\" }}\n      >\n        <h3>Add Calibrator</h3>\n        <form onSubmit={handleSubmit}>\n          <Table responsive striped bordered hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>Description</th>\n                <th>Storage</th>\n                <th>REF</th>\n                <th>P/N</th>\n                <th>UOM</th>\n                <th>QTY</th>\n                <th>Lot</th>\n                <th>Expiration Date</th>\n                <th>Comments</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Description\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setStorageTemp(e.target.value)}\n                    placeholder=\"Storage Temp\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setRefNum(e.target.value)}\n                    placeholder=\"Reference Number\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setPartNum(e.target.value)}\n                    placeholder=\"Part Number\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setUom(e.target.value)}\n                    placeholder=\"UOM\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setQuantity(e.target.value)}\n                    placeholder=\"Quantity\"\n                    size=\"4\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setLotNum(e.target.value)}\n                    placeholder=\"Lot\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setExpiration(e.target.value)}\n                    placeholder=\"Expiration\"\n                    size=\"10\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setComments(e.target.value)}\n                    placeholder=\"Comments\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <button className=\"invButton\" onClick={handleSubmit}>\n                    Add\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Calibrators;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport UserContext from \"../../context/userContext\";\nimport ReactCardFlip from \"react-card-flip\";\nimport \"./inventory.css\";\n\nfunction Reagents() {\n  const { userData } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [redirect, setRedirect] = useState(false);\n  const [reagents, setReagents] = useState([]);\n\n  //   setting states for new calibrator form\n  const [id, setId] = useState();\n  const [description, setDescription] = useState();\n  const [storageTemp, setStorageTemp] = useState();\n  const [refNum, setRefNum] = useState();\n  const [partNum, setPartNum] = useState();\n  const [uom, setUom] = useState();\n  const [quantity, setQuantity] = useState();\n  const [lotNum, setLotNum] = useState();\n  const [expiration, setExpiration] = useState();\n  const [comments, setComments] = useState(\"\");\n\n  //   variables and function for card flip\n  const [isFlipped, setIsFlipped] = useState(false);\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  //   variables and function for displaying add calibrator\n  const [isAdding, setIsAdding] = useState(false);\n  const showAdd = () => {\n    setIsAdding(!isAdding);\n  };\n\n  // variable to choose what is shown in calibrators table\n  const [isReagents, setIsReagents] = useState(false);\n\n  const getReagents = () => {\n    if (localStorage.getItem(\"auth-token\") !== null) {\n      fetch(\"https://labinventory-api.herokuapp.com/reagents/\", {\n        headers: {\n          Authorization: `Token ${userData.token}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setReagents(data);\n          setIsReagents(!isReagents);\n        });\n    }\n  };\n\n  useEffect(() => {\n    getReagents();\n  }, []);\n\n  //   method to update one of the Reagents\n  const editCal = (reagent) => {\n    console.log(\"edited\");\n    setId(reagent.id);\n    setDescription(reagent.description);\n    setStorageTemp(reagent.storage_temp);\n    setRefNum(reagent.reference_num);\n    setPartNum(reagent.part_number);\n    setUom(reagent.unit_of_measure);\n    setQuantity(reagent.quantity);\n    setLotNum(reagent.lot_number);\n    setExpiration(reagent.expiration_date);\n    setComments(reagent.comments);\n  };\n\n  //   method to delete calibrator\n  const deleteCal = (id) => {\n    console.log(\"deleted\");\n    fetch(\"https://labinventory-api.herokuapp.com/reagents/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Token ${userData.token}`,\n      },\n    }).then((data) => getReagents());\n  };\n\n  //   map over calibrator data to get data for the table\n  const reagentTable =\n    reagents &&\n    reagents.map((reagent) => {\n      return (\n        <tr>\n          <td>{reagent.id}</td>\n          <td>{reagent.description}</td>\n          <td>{reagent.storage_temp}</td>\n          <td>{reagent.reference_num}</td>\n          <td>{reagent.part_number}</td>\n          <td>{reagent.unit_of_measure}</td>\n          <td>{reagent.quantity}</td>\n          <td>{reagent.lot_number}</td>\n          <td>{reagent.expiration_date}</td>\n          <td>{reagent.comments}</td>\n          <td className=\"editicons\">\n            <i\n              class=\"far fa-edit\"\n              onClick={() => {\n                editCal(reagent);\n                handleClick();\n              }}\n            ></i>\n            <i\n              class=\"far fa-trash-alt\"\n              onClick={() => deleteCal(reagent.id)}\n            ></i>\n          </td>\n        </tr>\n      );\n    });\n\n  //   handle submit for form to add new calibrator\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"submitted\");\n    if (localStorage.getItem(\"auth-token\") !== null) {\n      fetch(\"https://labinventory-api.herokuapp.com/reagents/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${userData.token}`,\n        },\n        body: JSON.stringify({\n          description: description,\n          storage_temp: storageTemp,\n          reference_num: refNum,\n          part_number: partNum,\n          unit_of_measure: uom,\n          quantity: quantity,\n          lot_number: lotNum,\n          expiration_date: expiration,\n          comments: comments,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          getReagents();\n        });\n    }\n  };\n\n  const patchRequest = (e) => {\n    e.preventDefault();\n    console.log(\"patch\");\n    console.log(id);\n    if (localStorage.getItem(\"auth-token\") !== null) {\n      fetch(\"https://labinventory-api.herokuapp.com/reagents/\" + id, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${userData.token}`,\n        },\n        body: JSON.stringify({\n          description: description,\n          storage_temp: storageTemp,\n          reference_num: refNum,\n          part_number: partNum,\n          unit_of_measure: uom,\n          quantity: quantity,\n          lot_number: lotNum,\n          expiration_date: expiration,\n          comments: comments,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          getReagents();\n        });\n    }\n    //   getCalibrators();\n  };\n\n  console.log(reagents.length);\n\n  return (\n    <div id=\"reagents\">\n      <h3 className=\"invTitle\">Reagents</h3>\n      {reagents.length !== 0 ? (\n        <ReactCardFlip\n          className=\"flipCard\"\n          isFlipped={isFlipped}\n          fliDirection=\"vertical\"\n        >\n          <div className=\"frontCard\">\n            <div className=\"reagentTable\">\n              <Table responsive striped bordered hover size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Description</th>\n                    <th>Storage</th>\n                    <th>REF</th>\n                    <th>P/N</th>\n                    <th>UOM</th>\n                    <th>QTY</th>\n                    <th>Lot</th>\n                    <th>Expiration Date</th>\n                    <th>Comments</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>{reagentTable}</tbody>\n              </Table>\n            </div>\n          </div>\n\n          {/* back of card for updating control */}\n          <div className=\"backCard\">\n            <div className=\"newReagent\">\n              <h3>Update Reagent</h3>\n              <form onSubmit={patchRequest}>\n                <Table responsive striped bordered hover size=\"sm\">\n                  <thead>\n                    <tr>\n                      <th>Description</th>\n                      <th>Storage</th>\n                      <th>REF</th>\n                      <th>P/N</th>\n                      <th>UOM</th>\n                      <th>QTY</th>\n                      <th>Lot</th>\n                      <th>Expiration Date</th>\n                      <th>Comments</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setDescription(e.target.value)}\n                          placeholder=\"Description\"\n                          value={description}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setStorageTemp(e.target.value)}\n                          placeholder=\"Storage Temp\"\n                          value={storageTemp}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setRefNum(e.target.value)}\n                          placeholder=\"Reference Number\"\n                          value={refNum}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setPartNum(e.target.value)}\n                          placeholder=\"Part Number\"\n                          value={partNum}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setUom(e.target.value)}\n                          placeholder=\"UOM\"\n                          value={uom}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setQuantity(e.target.value)}\n                          placeholder=\"Quantity\"\n                          value={quantity}\n                          size=\"4\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setLotNum(e.target.value)}\n                          placeholder=\"Lot\"\n                          value={lotNum}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setExpiration(e.target.value)}\n                          placeholder=\"Expiration\"\n                          value={expiration}\n                          size=\"10\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setComments(e.target.value)}\n                          placeholder=\"Comments\"\n                          value={comments}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <button className=\"invButton\" onClick={handleClick}>\n                          Update\n                        </button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </form>\n            </div>\n          </div>\n        </ReactCardFlip>\n      ) : (\n        <h4>No reagents added yet.</h4>\n      )}\n\n      {/* form for adding a calibrator */}\n      <button className=\"invButton\" onClick={showAdd}>\n        Add Reagent\n      </button>\n      <div\n        className=\"newReagent\"\n        style={{ display: isAdding ? \"block\" : \"none\" }}\n      >\n        <h3>Add Reagent</h3>\n        <form onSubmit={handleSubmit}>\n          <Table responsive striped bordered hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>Description</th>\n                <th>Storage</th>\n                <th>REF</th>\n                <th>P/N</th>\n                <th>UOM</th>\n                <th>QTY</th>\n                <th>Lot</th>\n                <th>Expiration Date</th>\n                <th>Comments</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Description\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setStorageTemp(e.target.value)}\n                    placeholder=\"Storage Temp\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setRefNum(e.target.value)}\n                    placeholder=\"Reference Number\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setPartNum(e.target.value)}\n                    placeholder=\"Part Number\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setUom(e.target.value)}\n                    placeholder=\"UOM\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setQuantity(e.target.value)}\n                    placeholder=\"Quantity\"\n                    size=\"4\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setLotNum(e.target.value)}\n                    placeholder=\"Lot\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setExpiration(e.target.value)}\n                    placeholder=\"Expiration\"\n                    size=\"10\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setComments(e.target.value)}\n                    placeholder=\"Comments\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <button className=\"invButton\" onClick={handleSubmit}>\n                    Add\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Reagents;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport UserContext from \"../../context/userContext\";\nimport ReactCardFlip from \"react-card-flip\";\nimport \"./inventory.css\";\n\nfunction Consumables() {\n  const { userData } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [redirect, setRedirect] = useState(false);\n  const [consumables, setConsumables] = useState([]);\n\n  //   setting states for new calibrator form\n  const [id, setId] = useState();\n  const [description, setDescription] = useState();\n  const [storageTemp, setStorageTemp] = useState();\n  const [refNum, setRefNum] = useState();\n  const [partNum, setPartNum] = useState();\n  const [uom, setUom] = useState();\n  const [quantity, setQuantity] = useState();\n  const [lotNum, setLotNum] = useState();\n  const [expiration, setExpiration] = useState();\n  const [comments, setComments] = useState(\"\");\n\n  //   variables and function for card flip\n  const [isFlipped, setIsFlipped] = useState(false);\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  //   variables and function for displaying add calibrator\n  const [isAdding, setIsAdding] = useState(false);\n  const showAdd = () => {\n    setIsAdding(!isAdding);\n  };\n\n  // variable to choose what is shown in calibrators table\n  const [isConsumables, setIsConsumables] = useState(false);\n\n  const getConsumables = () => {\n    if (localStorage.getItem(\"auth-token\") !== null) {\n      fetch(\"https://labinventory-api.herokuapp.com/consumables/\", {\n        headers: {\n          Authorization: `Token ${userData.token}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setConsumables(data);\n          setIsConsumables(!isConsumables);\n        });\n    }\n  };\n\n  useEffect(() => {\n    getConsumables();\n  }, []);\n\n  //   method to update one of the consumables\n  const editCal = (consumable) => {\n    console.log(\"edited\");\n    setId(consumable.id);\n    setDescription(consumable.description);\n    setStorageTemp(consumable.storage_temp);\n    setRefNum(consumable.reference_num);\n    setPartNum(consumable.part_number);\n    setUom(consumable.unit_of_measure);\n    setQuantity(consumable.quantity);\n    setLotNum(consumable.lot_number);\n    setExpiration(consumable.expiration_date);\n    setComments(consumable.comments);\n  };\n\n  //   method to delete calibrator\n  const deleteCal = (id) => {\n    console.log(\"deleted\");\n    fetch(\"https://labinventory-api.herokuapp.com/consumables/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Token ${userData.token}`,\n      },\n    }).then((data) => getConsumables());\n  };\n\n  //   map over calibrator data to get data for the table\n  const consumableTable =\n    consumables &&\n    consumables.map((consumable) => {\n      return (\n        <tr>\n          <td>{consumable.id}</td>\n          <td>{consumable.description}</td>\n          <td>{consumable.storage_temp}</td>\n          <td>{consumable.reference_num}</td>\n          <td>{consumable.part_number}</td>\n          <td>{consumable.unit_of_measure}</td>\n          <td>{consumable.quantity}</td>\n          <td>{consumable.lot_number}</td>\n          <td>{consumable.expiration_date}</td>\n          <td>{consumable.comments}</td>\n          <td className=\"editicons\">\n            <i\n              class=\"far fa-edit\"\n              onClick={() => {\n                editCal(consumable);\n                handleClick();\n              }}\n            ></i>\n            <i\n              class=\"far fa-trash-alt\"\n              onClick={() => deleteCal(consumable.id)}\n            ></i>\n          </td>\n        </tr>\n      );\n    });\n\n  //   handle submit for form to add new calibrator\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"submitted\");\n    if (localStorage.getItem(\"auth-token\") !== null) {\n      fetch(\"https://labinventory-api.herokuapp.com/consumables/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${userData.token}`,\n        },\n        body: JSON.stringify({\n          description: description,\n          storage_temp: storageTemp,\n          reference_num: refNum,\n          part_number: partNum,\n          unit_of_measure: uom,\n          quantity: quantity,\n          lot_number: lotNum,\n          expiration_date: expiration,\n          comments: comments,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          getConsumables();\n        });\n    }\n  };\n\n  const patchRequest = (e) => {\n    e.preventDefault();\n    console.log(\"patch\");\n    console.log(id);\n    if (localStorage.getItem(\"auth-token\") !== null) {\n      fetch(\"https://labinventory-api.herokuapp.com/consumables/\" + id, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${userData.token}`,\n        },\n        body: JSON.stringify({\n          description: description,\n          storage_temp: storageTemp,\n          reference_num: refNum,\n          part_number: partNum,\n          unit_of_measure: uom,\n          quantity: quantity,\n          lot_number: lotNum,\n          expiration_date: expiration,\n          comments: comments,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          getConsumables();\n        });\n    }\n    //   getCalibrators();\n  };\n\n  console.log(consumables.length)\n\n  return (\n    <div id=\"consumables\">\n      <h3 className=\"invTitle\">Consumables</h3>\n      {consumables.length !== 0 ? (\n        <ReactCardFlip\n          className=\"flipCard\"\n          isFlipped={isFlipped}\n          fliDirection=\"vertical\"\n        >\n          <div className=\"frontCard\">\n            <div className=\"consumableTable\">\n              <Table responsive striped bordered hover size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Description</th>\n                    <th>Storage</th>\n                    <th>REF</th>\n                    <th>P/N</th>\n                    <th>UOM</th>\n                    <th>QTY</th>\n                    <th>Lot</th>\n                    <th>Expiration Date</th>\n                    <th>Comments</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>{consumableTable}</tbody>\n              </Table>\n            </div>\n          </div>\n\n          {/* back of card for updating consumable */}\n          <div className=\"backCard\">\n            <div className=\"newConsumable\">\n              <h3>Update Consumable</h3>\n              <form onSubmit={patchRequest}>\n                <Table responsive striped bordered hover size=\"sm\">\n                  <thead>\n                    <tr>\n                      <th>Description</th>\n                      <th>Storage</th>\n                      <th>REF</th>\n                      <th>P/N</th>\n                      <th>UOM</th>\n                      <th>QTY</th>\n                      <th>Lot</th>\n                      <th>Expiration Date</th>\n                      <th>Comments</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setDescription(e.target.value)}\n                          placeholder=\"Description\"\n                          value={description}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setStorageTemp(e.target.value)}\n                          placeholder=\"Storage Temp\"\n                          value={storageTemp}\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setRefNum(e.target.value)}\n                          placeholder=\"Reference Number\"\n                          value={refNum}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setPartNum(e.target.value)}\n                          placeholder=\"Part Number\"\n                          value={partNum}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setUom(e.target.value)}\n                          placeholder=\"UOM\"\n                          value={uom}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setQuantity(e.target.value)}\n                          placeholder=\"Quantity\"\n                          value={quantity}\n                          size=\"4\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setLotNum(e.target.value)}\n                          placeholder=\"Lot\"\n                          value={lotNum}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setExpiration(e.target.value)}\n                          placeholder=\"Expiration\"\n                          value={expiration}\n                          size=\"10\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          onChange={(e) => setComments(e.target.value)}\n                          placeholder=\"Comments\"\n                          value={comments}\n                          size=\"15\"\n                        />\n                      </td>\n                      <td>\n                        <button className=\"invButton\" onClick={handleClick}>\n                          Update\n                        </button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </form>\n            </div>\n          </div>\n        </ReactCardFlip>\n      ) : (\n        <h4>No consumables added yet.</h4>\n      )}\n\n      {/* form for adding a calibrator */}\n      <button className=\"invButton\" onClick={showAdd}>\n        Add Consumable\n      </button>\n      <div\n        className=\"newConsumable\"\n        style={{ display: isAdding ? \"block\" : \"none\" }}\n      >\n        <h3>Add Consumable</h3>\n        <form onSubmit={handleSubmit}>\n          <Table responsive striped bordered hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>Description</th>\n                <th>Storage</th>\n                <th>REF</th>\n                <th>P/N</th>\n                <th>UOM</th>\n                <th>QTY</th>\n                <th>Lot</th>\n                <th>Expiration Date</th>\n                <th>Comments</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Description\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setStorageTemp(e.target.value)}\n                    placeholder=\"Storage Temp\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setRefNum(e.target.value)}\n                    placeholder=\"Reference Number\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setPartNum(e.target.value)}\n                    placeholder=\"Part Number\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setUom(e.target.value)}\n                    placeholder=\"UOM\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setQuantity(e.target.value)}\n                    placeholder=\"Quantity\"\n                    size=\"4\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setLotNum(e.target.value)}\n                    placeholder=\"Lot\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setExpiration(e.target.value)}\n                    placeholder=\"Expiration\"\n                    size=\"10\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setComments(e.target.value)}\n                    placeholder=\"Comments\"\n                    size=\"15\"\n                  />\n                </td>\n                <td>\n                  <button className=\"invButton\" onClick={handleSubmit}>\n                    Add\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Consumables;\n","import React, {useState, useEffect, useContext} from 'react';\nimport {Link} from \"react-router-dom\"\nimport UserContext from \"../../context/userContext\"\nimport Controls from './Controls';\nimport Calibrators from './Calibrators';\nimport Reagents from './Reagents';\nimport Consumables from './Consumables';\nimport './inventory.css'\n\nfunction InventoryHome() {\n    const { userData } = useContext(UserContext);\n\n    return (\n      <div id=\"inventory\">\n        {userData.token ? (\n          <div>\n            <h1 className='inventoryHeader'>Inventory</h1>\n            <Controls />\n            <Calibrators />\n            <Reagents />\n            <Consumables />\n          </div>\n        ) : (\n          <div className=\"container\">\n            <img\n              className=\"labphoto\"\n              src=\"https://res.cloudinary.com/adelaney923/image/upload/v1640113474/labphoto1_l17oef.jpg\"\n              alt=\"labphoto\"\n            />\n            <div className=\"errorMessage\">\n              <p className=\"errorText\">\n                <Link className='loginlink' to=\"/login\">Login</Link> to see your inventory.\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n}\n\nexport default InventoryHome","import React, {useState} from 'react'\nimport {Route, Routes} from \"react-router-dom\"\nimport Header from \"./Components/Nav/Nav\";\nimport Landing from './Components/LandingPage/Landing'\nimport Contact from './Components/Contact/Contact'\nimport Signup from './Components/Auth/Signup'\nimport Login from './Components/Auth/Login'\nimport InventoryHome from './Components/Inventory/InventoryHome'\nimport UserContext from \"./context/userContext\";\n// import axios from \"axios\";\n\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    email: undefined,\n    token: undefined,\n  });\n\n\n  return (\n    <div className=\"App\">\n      <UserContext.Provider value={{ userData, setUserData }}>\n        <Header />\n        <Routes>\n          <Route exact path=\"/\" element={<Landing />} />\n          <Route exact path=\"/contact\" element={<Contact />} />\n          <Route exact path=\"/sign-up\" element={<Signup />} />\n          <Route exact path=\"/login\" element={<Login />} />\n          <Route exact path=\"/inventory\" element={<InventoryHome />} />\n        </Routes>\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<App />\n\t</HashRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}